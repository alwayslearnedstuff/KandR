/*
Exercise 1-9. Write a program to copy its input to its output, replacing each string of one or
more blanks by a single blank. 
*/

#include <stdio.h>
int main(void) {

        int c, pc; /* c = character, pc = previous character */

        /* set pc to a value that wouldn't match any character, in case
        this program is ever modified to get rid of multiples of other
        characters */

        pc = EOF;

        while ((c = getchar()) != EOF) {
                if (c == ' ')
                        if (pc != ' ')   /* or if (pc != c) */ 
                                putchar(c);

                /* We haven't met 'else' yet, so we have to be a little clumsy */
                if (c != ' ')
                        putchar(c);
                pc = c;
        }

        return 0;
}




/*this one works with inspace
//	int c,lc,nb; 
//	c=nb=0;
  int c;
  int inspace;

  inspace = 0;
  while((c = getchar()) != EOF)
  {
    if(c == ' '||c=='\t')
    {
      if(inspace == 0)
      {
        inspace = 1;
        putchar(' ');
      }
    }

    /* We haven't met 'else' yet, so we have to be a little clumsy 
    if(c != ' ')
    {
      inspace = 0;
      putchar(c);
    }
  }

  return 0;
}	
	
	*/
	/*
	while((c=getchar())!=EOF){
		if (c!=' '||c!='\t')
		 putchar(c);
		else{
		 	lc=c;
		 	nb++;
		 	if (nb>1){
		 	  c="x";
		 	  putchar(c);	
		 	  
		 	}
		} 
		 
		 	
	}


	return 0;
}
*/

/*  test input below
 Jim      Smith

Mr.      T

c   d   d

-1
*/

/*
Dead end code...thinking hard here about how to do it. 

		if(c=='\t'){
			nb++;
			c=' ';
		}

		if(nb>=2 && c!=' ' || c!='\t'){
			c=' ';
			nb=0;
		}
		putchar(c);
		printf("%d",c);
*/
